# Generated by Django 5.2.3 on 2025-06-30 10:49

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AssessmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Assessment Type',
                'verbose_name_plural': 'Assessment Types',
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('time_limit_minutes', models.PositiveIntegerField(default=60)),
                ('randomize_questions', models.BooleanField(default=True)),
                ('pass_threshold', models.FloatField(help_text='Pass threshold as percentage (0-100)', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(100.0)])),
                ('max_attempts', models.PositiveIntegerField(default=1, help_text='Maximum attempts allowed')),
                ('is_active', models.BooleanField(default=True)),
                ('instructions', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_assessments', to=settings.AUTH_USER_MODEL)),
                ('assessment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='assessments.assessmenttype')),
            ],
            options={
                'verbose_name': 'Assessment',
                'verbose_name_plural': 'Assessments',
            },
        ),
        migrations.CreateModel(
            name='AssessmentSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('expired', 'Expired')], default='not_started', max_length=20)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('time_taken_minutes', models.PositiveIntegerField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('total_points', models.PositiveIntegerField(blank=True, null=True)),
                ('percentage_score', models.FloatField(blank=True, null=True)),
                ('passed', models.BooleanField(blank=True, null=True)),
                ('attempt_number', models.PositiveIntegerField(default=1)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='assessments.assessment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Assessment Session',
                'verbose_name_plural': 'Assessment Sessions',
                'unique_together': {('user', 'assessment', 'attempt_number')},
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('question_type', models.CharField(choices=[('MCQ', 'Multiple Choice'), ('TF', 'True/False'), ('SA', 'Short Answer'), ('LA', 'Long Answer'), ('NUM', 'Numeric')], max_length=3)),
                ('options', models.JSONField(blank=True, help_text='For MCQ: list of options', null=True)),
                ('correct_answer', models.TextField()),
                ('explanation', models.TextField(blank=True, help_text='Explanation for the correct answer')),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], default='medium', max_length=10)),
                ('points', models.PositiveIntegerField(default=1, help_text='Points for this question')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assessment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='assessments.assessmenttype')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='AssessmentQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0)),
                ('points', models.PositiveIntegerField(default=1)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_questions', to='assessments.assessment')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessment_questions', to='assessments.question')),
            ],
            options={
                'ordering': ['order'],
                'unique_together': {('assessment', 'question')},
            },
        ),
        migrations.AddField(
            model_name='assessment',
            name='questions',
            field=models.ManyToManyField(related_name='assessments', through='assessments.AssessmentQuestion', to='assessments.question'),
        ),
        migrations.CreateModel(
            name='QuestionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('assessment_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='assessments.assessmenttype')),
            ],
            options={
                'verbose_name': 'Question Category',
                'verbose_name_plural': 'Question Categories',
                'unique_together': {('name', 'assessment_type')},
            },
        ),
        migrations.AddField(
            model_name='question',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='assessments.questioncategory'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response', models.TextField()),
                ('is_correct', models.BooleanField(blank=True, null=True)),
                ('points_earned', models.PositiveIntegerField(default=0)),
                ('answered_at', models.DateTimeField(auto_now_add=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='assessments.assessmentsession')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='assessments.question')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'unique_together': {('session', 'question')},
            },
        ),
    ]
